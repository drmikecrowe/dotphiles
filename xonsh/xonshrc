$XONSH_SHOW_TRACEBACK = True

import os
from datetime import datetime
from xonsh.history.json import JsonHistory

# powerline2 
# $PL_PROMPT="cwd>rtns"
# $PL_TOOLBAR = 'who>branch>virtualenv>full_proc'

# pip install xonsh-apt-tabcomplete xontrib-autojump xonsh-docker-tabcomplete xontrib-ssh-agent xonsh-direnv
# XONSH WIZARD START  
xontrib load apt_tabcomplete autojump docker_tabcomplete ssh_agent direnv coreutils 
# XONSH WIZARD END

$XONSH_STORE_STDOUT = True
#$XONSH_HISTORY_SIZE = 
$XONSH_HISTORY_MATCH_ANYWHERE = True

if os.path.exists("/usr/bin/ksshaskpass"):
  ${...}["SSH_ASKPASS"] = '/usr/bin/ksshaskpass'

home = ${...}["HOME"]
for dir in ['.pyenv', '.nodenv', '.rbenv', '.goenv']:
  bin = "{}/{}/bin".format(home, dir)
  if os.path.exists(bin): $PATH.append(bin)

def csu(args, stdin=None):
  lines = []
  for line in stdin.read().strip().split("\n"):
    lines.append(line.strip())
  print("\n".join(set(lines)))
aliases['csu'] = csu

aliases["....."] = 'cd ../../../..'
aliases["...."] = 'cd ../../..'
aliases["..."] = 'cd ../..'
aliases[".."] = 'cd ..'
aliases["acs"] = 'aptitude search'
aliases["agi"] = 'sudo aptitude install'
aliases["agu"] = 'sudo aptitude update'
aliases["cnc"] = 'grep "^[^#;]"'
aliases["dud"] = 'du -h --max-depth=1 --one-file-system'
aliases["dudg"] = 'du -h --max-depth=1 --one-file-system 2>&1 | egrep "^[0-9.]*G"'
aliases["gh"] = 'history | grep --colour=auto'
aliases["grep"] = "grep --color --exclude-dir='.svn' --exclude-dir='.git'"
aliases["l"] = 'ls -l --color=tty'
aliases["ll"] = 'ls -la --color=tty'
aliases["md"] = 'mkdir'
aliases["psa"] = 'ps faux'
aliases["psag"] = 'ps faux | grep'
aliases["tail"] = 'tail -n 30'
aliases["ta"] = 'tmux attach -t'
aliases["tnew"] = 'tmux new -s'
aliases["tls"] = 'tmux ls'
aliases["tkill"] = 'tmux kill-session -t'

class SaveAllHistory(JsonHistory):
  def append(self, cmd):
    try:
      cwd = "{}/.logs{}".format(__xonsh__.env["HOME"], __xonsh__.env["PWD"])
      if not os.path.exists(cwd): os.makedirs(cwd)
      file = "{}/bash-history-{}.log".format(cwd, datetime.now().strftime("%Y-%m-%d"))
      open(file, "a").write("{} {}".format(datetime.now().strftime("%Y-%m-%d.%H.%M.%S"), cmd["inp"]))
      super().append(cmd)
    except Exception:
      print("History not being saved")
$XONSH_HISTORY_BACKEND = SaveAllHistory
